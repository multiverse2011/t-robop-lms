                    # 型と変数

変数とは、値を保存するための仕組みです。

例

num という箱に 10 を入れる

![スクリーンショット 2018-04-15 12.42.11](/Users/yuusuke/Tokai/roboP/教材/型と変数/スクリーンショット 2018-04-15 12.42.11.png)

## 型とは

プログラミングの世界には型という概念があります。

ここでは、その概念について説明します。



パソコンは賢いように見えますが、実はあまり賢くありません。

例えば、

**1024**

と書いてあったら、みなさんはどう判断しますか？？

数字が並んでいると考えますよね。



PCは違います。

これは文字かもしれないな？数字としても使える。

あれ？それ以外でも使えるぞ・・・？



となってしまうのです。

人間のように状況に応じて、認識を変えることが出来ません。

そのため、変数に値を保存する時は人間がこの値は数字なんだよ、文字列なんだよと教える必要があります。

どんな形をしたデータなのかをパソコンがわかるようにしてあげるのが型です。



## 型の種類

Javaでは、基本型と呼ばれる8つの型と、参照型があります。

###### 基本型の一覧

* int
* boolean
* float
* double
* byte
* short
* long
* char


それぞれの特徴について見ていきましょう。

※Androidアプリを開発していく中で、byte,short,long,charについては、あまり使わないためさらっと触れます。

***



### int型(イント)

2の32乗のデータを持つことが出来ます。

**整数**を表す時に使う型です。

少数などは持たせることが出来ません。

-2147483648 ~ 2147483647の間までの数を持つことが出来ます。

#### int型の使い方

##### 宣言のみ

```java
int num:
```

##### 宣言と同時に代入をする時

```java
int num =  10;
```

##### 変数の値を変更したい時(代入)

```java
num = 20;
```

![int box](/Users/yuusuke/Tokai/roboP/教材/型と変数/int box.png)

***

### boolean型(ブーリアン)

true か false の2つのデータしか持つことが出来ません。

#### boolean型の使い方

#####宣言のみ

```java
boolean b1;
```

##### 宣言と同時に代入をする時

```java
boolean b1 = true;
boolean b2 = false;
```

![boolean box-3800162](/Users/yuusuke/Tokai/roboP/教材/型と変数/boolean box-3800162.png)

***



### float型(フロート)

2の32乗のデータを持つことが出来ます。

データサイズはint型と同じです。

実数を持つことが出来ます。

そのため、少数などが取り扱えます。

また、代入する際の値にfを最後に付けることで、明示的に型を指定できる。

#### float型の使い方

##### 宣言のみ

```java
float f1;
```

##### 宣言と同時に代入をする時

```java
float f1 = 1.234;
float f2 = -9.21;
float f3 = -9.21f;
```

![float box](/Users/yuusuke/Tokai/roboP/教材/型と変数/float box.png)

***



### double型(ダブル)

2の64乗のデータを持つことが出来ます。

実数を持つことが出来ます。

floatと同じく少数などが取り扱えます。

また、代入する際の値にdを最後に付けることで、明示的に型を指定できる。

#### double型の使い方

##### 宣言のみ

```java
double d1;
```

##### 宣言と同時に代入をする時

```java
double d1 = 1.234;
double d2 = -9.21;
double d3 = -9.21d;
```

***



### byte型(バイト)

2の8乗のデータを持つことが出来ます。

**整数**を表す時に使う型です。

少数などは持たせることが出来ません。

-128 ~ 127の間までの数を持つことが出来ます。

#### byte型の使い方

##### 宣言のみ

```java
byte b1;
```

##### 宣言と同時に代入をする時

```java
byte b1 = 50;
byte b2 = -10;
```

------



### short型(ショート)

2の16乗のデータを持つことが出来ます。

**整数**を表す時に使う型です。

少数などは持たせることが出来ません。

- -32768~ 32767の間までの数を持つことが出来ます。



#### short型の使い方

##### 宣言のみ

```java
short s1;
```

##### 宣言と同時に代入をする時

```java
short s1 = 50;
short s2 = -10;
```

------



### long型(ロング)

2の64乗のデータを持つことが出来ます。

**整数**を表す時に使う型です。

少数などは持たせることが出来ません。

-9223372036854775808 ~ 9223372036854775807の間までの数を持つことが出来ます。

#### long型の使い方

##### 宣言のみ

```java
long l1;
```

##### 宣言と同時に代入をする時

```java
long l1 = 50;
long l2 = -10;
```

------



### char型(キャラ)

2の16乗のデータを持つことが出来ます。

1文字を表す時に使う型。

#### char型の使い方

##### 宣言のみ

```java
char c1;
```

##### 宣言と同時に代入をする時

```java
char c1 = 'a';
```

#####こんな書き方はエラーだよ！

```java
char c2 = 'aaaaaaaaa';
```





------



## 練習問題

* 整数を使う型は何でしょう？



* 少数を使う型は何でしょう？



